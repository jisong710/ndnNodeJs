import { type FwFace, ReadvertiseDestination } from "@ndn/fw";
import { type KeyChain } from "@ndn/keychain";
import { type Name } from "@ndn/packet";
import { ControlCommand } from "./control-command.js";
import type { ControlParameters } from "./control-parameters.js";
type CommandOptions = Omit<ControlCommand.Options, "endpoint">;
type RouteOptions = Pick<ControlParameters.Fields, "origin" | "cost" | "flags">;
type Options = CommandOptions & RouteOptions & {
    retry?: ReadvertiseDestination.RetryOptions;
    /** How often to refresh prefix registration, false to disable. */
    refreshInterval?: number | false;
    /** Set to signer name to retrieve and serve certificate chain. */
    preloadCertName?: Name;
    /** Local KeyChain to collect preloaded certificates. */
    preloadFromKeyChain?: KeyChain;
    /** InterestLifetime for retrieving preloaded certificates. */
    preloadInterestLifetime?: number;
};
/**
 * Enable prefix registration via NFD management protocol.
 * @param face face connected to NFD.
 * @param opts options.
 */
export declare function enableNfdPrefixReg(face: FwFace, opts?: Options): void;
export {};
