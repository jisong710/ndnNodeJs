import type { Name } from "@ndn/packet";
import type { Certificate, ValidityPeriod } from "../cert/mod.js";
import type { CryptoAlgorithm } from "./types.js";
export declare function isPublicSecretKey(obj: unknown): obj is CryptoAlgorithm.PublicSecretKey;
export declare class ImportCertCached<T, A extends CryptoAlgorithm> {
    private readonly ImportedType;
    private readonly defaultAlgoList;
    constructor(ImportedType: new (keyName: Name, algo: A, key: CryptoAlgorithm.PublicSecretKey) => T, defaultAlgoList: readonly A[]);
    private readonly cache;
    importCert(cert: Certificate, { algoList, checkValidity, now, }: {
        algoList?: readonly A[];
        checkValidity?: boolean;
        now?: ValidityPeriod.TimestampInput;
    }): Promise<T>;
}
