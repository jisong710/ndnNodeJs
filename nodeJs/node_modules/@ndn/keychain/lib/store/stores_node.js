import fs from "node:fs";
import { dirname } from "node:path";
import { console } from "@ndn/util";
import { CertStore } from "./cert-store_node.js";
import { KeyStore } from "./key-store_node.js";
import { MemoryStoreProvider } from "./store-base_node.js";
class FileStoreProvider extends MemoryStoreProvider {
    path;
    canSClone = false;
    loaded = false;
    saveDebounce;
    constructor(path) {
        super();
        this.path = path;
    }
    load() {
        if (this.loaded) {
            return;
        }
        try {
            this.record = JSON.parse(fs.readFileSync(this.path, "utf8"));
        }
        catch (err) {
            if (err.code === "ENOENT" || err.name === "SyntaxError") {
                this.record = {};
            }
            else {
                throw err;
            }
        }
        this.loaded = true;
    }
    save() {
        if (this.saveDebounce) {
            this.saveDebounce.refresh();
        }
        else {
            this.saveDebounce = setTimeout(this.doSave, 200);
        }
    }
    doSave = () => {
        try {
            fs.mkdirSync(dirname(this.path), { recursive: true });
            fs.writeFileSync(this.path, JSON.stringify(this.record));
        }
        catch (err) {
            console.error(`FileStoreProvider(${this.path}) write error ${err}`);
        }
        finally {
            this.saveDebounce = undefined;
        }
    };
    async list() {
        this.load();
        return super.list();
    }
    async get(key) {
        this.load();
        return super.get(key);
    }
    async insert(key, value) {
        this.load();
        await super.insert(key, value);
        this.save();
    }
    async erase(key) {
        this.load();
        await super.erase(key);
        this.save();
    }
}
export function openStores(locator, algoList) {
    return [
        new KeyStore(new FileStoreProvider(`${locator}/fdd08d47-ec4d-4112-a5ce-898338ab0399.json`), algoList),
        new CertStore(new FileStoreProvider(`${locator}/d29e6de4-d5dd-4222-b2e2-d06e4046e7f9.json`)),
    ];
}
