import { fromHex } from "@ndn/util";
import { CounterIncrement, parseCounterIvOptions } from "./counter-common_browser.js";
import { IvGen } from "./gen_browser.js";
/** IV generator using fixed+random+counter structure. */
export class CounterIvGen extends IvGen {
    constructor(opts) {
        super(opts.ivLength);
        const { fixed, random, maxCounter } = parseCounterIvOptions(opts);
        this.ivPrefix = fixed | random;
        this.ci = new CounterIncrement(opts.blockSize, maxCounter);
    }
    ivPrefix;
    ci;
    generate() {
        const iv = this.ivPrefix | this.ci.counter;
        return fromHex(iv.toString(16).padStart(2 * this.ivLength, "0"));
    }
    update(plaintextLength, ciphertextLength) {
        this.ci.appendBlocks(plaintextLength, ciphertextLength);
    }
}
