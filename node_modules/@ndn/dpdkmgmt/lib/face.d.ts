import { Forwarder, type FwFace } from "@ndn/fw";
import { L3Face } from "@ndn/l3face";
import { udp_helper } from "@ndn/node-transport";
import type { NameLike } from "@ndn/packet";
import { MemifTransport } from "./memif-transport.js";
/** Open a face on NDN-DPDK. */
export declare function openFace(opts?: openFace.Options): Promise<FwFace>;
export declare namespace openFace {
    interface Options {
        /**
         * NDN-DPDK GraphQL server.
         * Default is http://127.0.0.1:3030 .
         */
        gqlServer?: string;
        /**
         * IP address to reach local host from NDN-DPDK.
         * Default is auto-detected from GraphQL HTTP client.
         */
        localHost?: string;
        /** NDNts logical forwarder. */
        fw?: Forwarder;
        /** NDNts face attributes. */
        attributes?: L3Face.Attributes;
        /** Routes to be added on the created face. Default is ["/"]. */
        addRoutes?: readonly NameLike[];
        /**
         * Transport scheme.
         * Default is "udp".
         */
        scheme?: "udp" | "memif";
        /** UDP socket options. */
        udp?: udp_helper.OpenSocketOptions;
        /** memif options. */
        memif?: MemifOptions;
    }
    /** memif options. */
    interface MemifOptions extends Pick<MemifTransport.Options, "dataroom" | "ringCapacity"> {
        /**
         * Directory in which to place control socket.
         * If NDN-DPDK and NDNts are in containers, the same directory must be mounted in both containers.
         * Default is /run/ndn .
         */
        socketPath?: string;
    }
}
